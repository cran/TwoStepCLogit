
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "TwoStepCLogit"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('TwoStepCLogit')
Loading required package: survival
Loading required package: splines
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Ts.estim")
> ### * Ts.estim
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Ts.estim
> ### Title: Two-step estimator
> ### Aliases: print.Ts.estim Ts.estim
> ### Keywords: models
> 
> ### ** Examples
> 
> data(bison)
> 
> # Two ways for specifying the same model
> # Model: covariates forest, biomass and pmeadow
> # Random effects in front of forest and biomass
> # Main diagonal covariance structure for D (the default)
> way1 <- Ts.estim(formula = Y ~ forest  + biomass + pmeadow +
+         strata(Strata) + cluster(Cluster), data = bison,
+         random = ~ forest + biomass)
> way1
Call:
Ts.estim(formula = Y ~ forest + biomass + pmeadow + strata(Strata) + 
    cluster(Cluster), data = bison, random = ~forest + biomass)

beta coefficients:
          estimate        se
forest   -1.890247  0.489711
biomass   0.681348  0.972469
pmeadow  -6.227671  0.635009

D = estimate of the between-cluster variance-covariance matrix D,
    for the random coefficients only:
           forest   biomass
forest   1.970368  0.000000
biomass  0.000000  8.480526
> way2 <- Ts.estim(formula = bison[,3] ~ as.matrix(bison[,c(6,8:9)]) +
+         strata(bison[,2]) + cluster(bison[,1]), data = bison,
+         random = ~ as.matrix(bison[,c(6,8)]))
> way2
Call:
Ts.estim(formula = bison[, 3] ~ as.matrix(bison[, c(6, 8:9)]) + 
    strata(bison[, 2]) + cluster(bison[, 1]), data = bison, random = ~as.matrix(bison[, 
    c(6, 8)]))

beta coefficients:
          estimate        se
forest   -1.890247  0.489711
biomass   0.681348  0.972469
pmeadow  -6.227671  0.635009

D = estimate of the between-cluster variance-covariance matrix D,
    for the random coefficients only:
           forest   biomass
forest   1.970368  0.000000
biomass  0.000000  8.480526
> 
> # Unstructured covariance for D
> Fit <- Ts.estim(formula = Y ~ forest  + biomass + pmeadow +
+         strata(Strata) + cluster(Cluster), data = bison,
+         random = ~ forest + biomass, D="UN")
> Fit
Call:
Ts.estim(formula = Y ~ forest + biomass + pmeadow + strata(Strata) + 
    cluster(Cluster), data = bison, random = ~forest + biomass, 
    D = "UN")

beta coefficients:
          estimate        se
forest   -1.956823  0.542426
biomass   0.387181  1.060023
pmeadow  -6.227671  0.635009

D = estimate of the between-cluster variance-covariance matrix D,
    for the random coefficients only:
           forest    biomass
forest   3.115824   6.189187
biomass  6.189187  12.302650
> 
> 
> 
> cleanEx()
> nameEx("bison")
> ### * bison
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bison
> ### Title: Bison data
> ### Aliases: bison
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(bison)
> 
> # Some descriptive statistics about the data set:
> ddim(formula = Y ~ strata(Strata) + cluster(Cluster), data = bison)
Number of clusters = 20

Numbers of strata per cluster:
   Min  Median    Mean     Max     Sum  
    13      42      70     345    1410  

Numbers of observations per strata (n) and
sums of the response variable values per strata (m) :
    n  m  NumberOfStrata
   12  2            1393
    6  1              17

Total number of observations = 16818 
>  
> # Model 1: covariates meadow, biomass and biomass^2
> # Random effects in front of biomass and biomass^2
> # Main diagonal covariance structure for D
> Fit1 <- Ts.estim(formula = Y ~ meadow + biomass + I(biomass^2) + 
+         strata(Strata) + cluster(Cluster), data = bison, 
+         random = ~ biomass + I(biomass^2), all.m.1=FALSE, D="UN(1)")
> 
> Fit1
Call:
Ts.estim(formula = Y ~ meadow + biomass + I(biomass^2) + strata(Strata) + 
    cluster(Cluster), data = bison, random = ~biomass + I(biomass^2), 
    all.m.1 = FALSE, D = "UN(1)")

beta coefficients:
               estimate        se
meadow         1.578832  0.957417
biomass        9.236758  6.742591
I(biomass^2)  -9.149295  6.897431

D = estimate of the between-cluster variance-covariance matrix D,
    for the random coefficients only:
               biomass  I(biomass^2)
biomass       331.0553        0.0000
I(biomass^2)    0.0000      334.5556
> 
> # Model 2: only covariates biomass and biomass^2
> # Random effects in front of biomass and biomass^2
> # Main diagonal covariance structure for D
> Fit2 <- Ts.estim(formula = Y ~ biomass + I(biomass^2) + strata(Strata) + 
+         cluster(Cluster), data = bison, all.m.1=FALSE, D="UN(1)")
> Fit2
Call:
Ts.estim(formula = Y ~ biomass + I(biomass^2) + strata(Strata) + 
    cluster(Cluster), data = bison, all.m.1 = FALSE, D = "UN(1)")

beta coefficients:
               estimate        se
biomass        8.593260  1.125516
I(biomass^2)  -7.789917  2.065689

D = estimate of the between-cluster variance-covariance matrix D,
    for the random coefficients only:
               biomass  I(biomass^2)
biomass       13.83039       0.00000
I(biomass^2)   0.00000      48.44104
> # Results reported in Table 2 of Craiu et al. (2011).
> 
> 
> 
> 
> cleanEx()
> nameEx("ddim")
> ### * ddim
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ddim
> ### Title: Data dimension statistics
> ### Aliases: ddim print.ddim
> 
> ### ** Examples
> 
> data(bison)
> dimstat <- ddim(formula = Y ~ strata(Strata) + cluster(Cluster), data = bison)
> dimstat
Number of clusters = 20

Numbers of strata per cluster:
   Min  Median    Mean     Max     Sum  
    13      42      70     345    1410  

Numbers of observations per strata (n) and
sums of the response variable values per strata (m) :
    n  m  NumberOfStrata
   12  2            1393
    6  1              17

Total number of observations = 16818 
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  6.16 0.02 6.27 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
